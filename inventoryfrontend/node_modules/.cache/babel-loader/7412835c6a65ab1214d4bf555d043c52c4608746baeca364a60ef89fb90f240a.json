{"ast":null,"code":"var _jsxFileName = \"/Users/nourab/inventory-frontend copy/e-commerce-microservices/inventoryfrontend/src/components/InventoryList/InventoryPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './inventorylist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductStockInput = ({\n  productId,\n  initialQuantity,\n  onUpdate\n}) => {\n  _s();\n  const [quantity, setQuantity] = useState(initialQuantity);\n  useEffect(() => {\n    setQuantity(initialQuantity);\n  }, [initialQuantity]);\n  const handleQuantityChange = e => {\n    setQuantity(e.target.value);\n  };\n  const handleUpdate = () => {\n    onUpdate(productId, quantity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: quantity,\n      onChange: handleQuantityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"update-button\",\n      onClick: handleUpdate,\n      children: \"Add Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductStockInput, \"TfZRz2TpeJz47HwdQ3vNFhYZLwY=\");\n_c = ProductStockInput;\nconst InventoryPage = () => {\n  _s2();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const productResponse = await axios.get('http://localhost:8080/api/products/getAll');\n      const productsData = productResponse.data;\n      console.log('Fetched products data:', productsData);\n      const productsDataWithId = productsData.map((product, index) => ({\n        id: product.id || index + 1,\n        // Use product.id if it exists, else assign a temporary unique ID\n        ...product\n      }));\n      const productsWithStock = await Promise.all(productsDataWithId.map(async product => {\n        console.log('Processing product:', product);\n        try {\n          const stockResponse = await axios.get(`http://localhost:8082/api/inventory/check/${product.id}`);\n          console.log(`Stock response for product ${product.id}:`, stockResponse.data);\n          const currentStock = stockResponse.data;\n          return {\n            ...product,\n            currentStock\n          };\n        } catch (stockError) {\n          console.error(`Error fetching stock for product ${product.id}:`, stockError);\n          return {\n            ...product,\n            currentStock: 0\n          };\n        }\n      }));\n      setProducts(productsWithStock);\n    } catch (error) {\n      console.error('Error fetching products or stock:', error);\n    }\n  };\n  const handleStockChange = async (productId, newStock) => {\n    try {\n      const stock = newStock || 0;\n      await axios.put(`http://localhost:8082/api/inventory/update/${productId}/${stock}`);\n      setProducts(prevProducts => prevProducts.map(product => product.id === productId ? {\n        ...product,\n        currentStock: stock\n      } : product));\n      fetchProducts();\n    } catch (error) {\n      console.error('Error updating or adding stock:', error);\n    }\n  };\n  const deleteProductStock = async productId => {\n    try {\n      await axios.delete(`http://localhost:8082/api/inventory/delete/${productId}`);\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product stock:', error);\n    }\n  };\n  const getCurrentStock = async productId => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/inventory/check/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching stock for product ${productId}:`, error);\n      return 0;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"New Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.currentStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(ProductStockInput, {\n              productId: product.id,\n              initialQuantity: product.currentStock,\n              onUpdate: handleStockChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => deleteProductStock(product.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(InventoryPage, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c2 = InventoryPage;\nexport default InventoryPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProductStockInput\");\n$RefreshReg$(_c2, \"InventoryPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProductStockInput","productId","initialQuantity","onUpdate","_s","quantity","setQuantity","handleQuantityChange","e","target","value","handleUpdate","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","InventoryPage","_s2","products","setProducts","fetchProducts","productResponse","get","productsData","data","console","log","productsDataWithId","map","product","index","id","productsWithStock","Promise","all","stockResponse","currentStock","stockError","error","handleStockChange","newStock","stock","put","prevProducts","deleteProductStock","delete","getCurrentStock","response","name","_c2","$RefreshReg$"],"sources":["/Users/nourab/inventory-frontend copy/e-commerce-microservices/inventoryfrontend/src/components/InventoryList/InventoryPage.js"],"sourcesContent":["import React,  { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './inventorylist.css';\n\nconst ProductStockInput = ({ productId, initialQuantity, onUpdate }) => {\n  const [quantity, setQuantity] = useState(initialQuantity);\n\n  useEffect(() => {\n    setQuantity(initialQuantity);\n  }, [initialQuantity]);\n\n  const handleQuantityChange = (e) => {\n    setQuantity(e.target.value);\n  };\n\n  const handleUpdate = () => {\n    onUpdate(productId, quantity);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        value={quantity}\n        onChange={handleQuantityChange}\n      />\n      <button className=\"update-button\" onClick={handleUpdate}>Add Stock</button>\n    </div>\n  );\n};\n\nconst InventoryPage = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const productResponse = await axios.get('http://localhost:8080/api/products/getAll');\n      const productsData = productResponse.data;\n\n      console.log('Fetched products data:', productsData);\n\n    \n      const productsDataWithId = productsData.map((product, index) => ({\n        id: product.id || index + 1, // Use product.id if it exists, else assign a temporary unique ID\n        ...product\n      }));\n\n      const productsWithStock = await Promise.all(\n        productsDataWithId.map(async (product) => {\n          console.log('Processing product:', product);\n          try {\n            const stockResponse = await axios.get(`http://localhost:8082/api/inventory/check/${product.id}`);\n            console.log(`Stock response for product ${product.id}:`, stockResponse.data);\n            const currentStock = stockResponse.data; \n\n            return {\n              ...product,\n              currentStock,\n            };\n          } catch (stockError) {\n            console.error(`Error fetching stock for product ${product.id}:`, stockError);\n            return {\n              ...product,\n              currentStock: 0,\n            };\n          }\n        })\n      );\n\n      setProducts(productsWithStock);\n    } catch (error) {\n      console.error('Error fetching products or stock:', error);\n    }\n  };\n\n  const handleStockChange = async (productId, newStock) => {\n    try {\n      const stock = newStock || 0;\n      await axios.put(`http://localhost:8082/api/inventory/update/${productId}/${stock}`);\n      \n\n      setProducts(prevProducts =>\n        prevProducts.map(product =>\n          product.id === productId ? { ...product, currentStock: stock } : product\n        )\n      );\n\n      fetchProducts();\n    } catch (error) {\n      console.error('Error updating or adding stock:', error);\n    }\n  };\n\n  const deleteProductStock = async (productId) => {\n    try {\n      await axios.delete(`http://localhost:8082/api/inventory/delete/${productId}`);\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product stock:', error);\n    }\n  };\n\n  const getCurrentStock = async (productId) => {\n    try {\n      const response = await axios.get(`http://localhost:8082/api/inventory/check/${productId}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching stock for product ${productId}:`, error);\n      return 0;\n    }\n  };\n\n  return (\n    <div className=\"inventory-container\">\n      <h1>Inventory Management</h1>\n      <table className=\"inventory-table\">\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Current Stock</th>\n            <th>New Stock</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <tr key={product.id}>\n              <td>{product.name}</td>\n              <td>{product.currentStock}</td>\n              <td>\n                <ProductStockInput\n                  productId={product.id}\n                  initialQuantity={product.currentStock}\n                  onUpdate={handleStockChange}\n                />\n              </td>\n              <td>\n                <button className=\"delete-button\" onClick={() => deleteProductStock(product.id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\nexport default InventoryPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}